# COMMENT Potential FAQs to prepare for workshop questions
#+STARTUP: indent

* How do you handle Service Discovery and Locality?

[ Reference: http://mesos.apache.org/documentation/latest/app-framework-development-guide/ ]

Use the DiscoveryInfo message for declaring the visibility and discovery options.

#+BEGIN_SRC protobuf
message DiscoveryInfo {
  enum Visibility {
    FRAMEWORK = 0;
    CLUSTER = 1;
    EXTERNAL = 2;
  }

  required Visibility visibility = 1;
  optional string name = 2;
  optional string environment = 3;
  optional string location = 4;
  optional string version = 5;
  optional Ports ports = 6;
  optional Labels labels = 7;
}
#+END_SRC


* What do you think of Mesomatic?

- We absolutely loved the presentation given by Pierre at EuroClojure https://www.youtube.com/watch?v=X-fVA5DxezE
- It is clearly more mature than clj-mesos at this point but we'd already started building our workshop around clj-mesos.

(Perhaps we can provide a sample for users)

* Monitoring Mesos

http://mesos.apache.org/documentation/latest/monitoring/
* hello-mesos related Notes
** Adding more executors
In dev/user.clj

Change the number of executors to start in the expression

#+BEGIN_SRC clojure
(sys/scheduler-system "zk://10.10.4.2:2181/mesos"
                       1
                      sched/jar-task-info))
#+END_SRC

Save and run in REPL
#+BEGIN_SRC clojure
(reset)
#+END_SRC

** Adding more Slaves

There are two ways to do this, either run the =vagrant up= command
with environment variable =MESOS_SLAVES= equal to the desired number
of slaves. Or, edit the Vagrantfile to read

#+BEGIN_SRC ruby
vagrant_slaves = ENV.fetch('MESOS_SLAVES', 3).to_i
#+END_SRC



** What happens when you kill a slave?

- You get a status update message in master that looks as follows

#+BEGIN_SRC clojure
{:task-id 5350fd2f-48b6-4ccb-b9ff-627bb2bacc6d, :state :task-lost,
:message Slave 10.10.4.11 disconnected, :slave-id 20150825-153127-33819146-5050-1218-S1,
:timestamp 1.441643388616899E9, :source :source-master, :reason :reason-slave-disconnected}
#+END_SRC

You can choose to then execute the slave
